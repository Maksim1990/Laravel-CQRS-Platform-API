{
    "openapi": "3.0.0",
    "info": {
        "title": "WEBMASTERY SCHOOL API DOCS",
        "description": "Webmastery School Portal API documentation",
        "contact": {
            "email": "narushevich.maksim@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:7000/api/v1",
            "description": "API documentation"
        }
    ],
    "paths": {
        "/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get all comments",
                "description": "Returns all comments details",
                "operationId": "getComments",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Comment page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create a new comment",
                "description": "Create a new comment.",
                "operationId": "createComment",
                "requestBody": {
                    "description": "Create comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateComment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/comments/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get a specific comment",
                "description": "Returns comment details",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Comment Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete comment",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of comment to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a specific comment",
                "description": "Update comment.",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/courses": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get all courses",
                "description": "Returns all courses details",
                "operationId": "getCourses",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "videos;lessons;courses;user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Create a new course",
                "description": "Create a new course.",
                "operationId": "createCourse",
                "requestBody": {
                    "description": "Create product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCourse"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/courses/{slug}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get a specific course",
                "description": "Returns course details",
                "operationId": "getCourseById",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Course slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Course Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/courses/{id}": {
            "delete": {
                "tags": [
                    "Course"
                ],
                "summary": "Delete course",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of course to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Course"
                ],
                "summary": "Update a specific course",
                "description": "Update course.",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update course",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/courses/{id}/tags": {
            "put": {
                "tags": [
                    "Course"
                ],
                "summary": "Update course's tags",
                "description": "Update course's tags.",
                "operationId": "updateCourseTags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Course's tags",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "description": "Course's tags",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "action": {
                                        "description": "Update the specified resource in storage.",
                                        "type": "string",
                                        "example": "ATTACH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course tags updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/lessons": {
            "get": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Get all lessons",
                "description": "Returns all lessons details",
                "operationId": "getLessons",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Lesson page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "videos;tasks;comments;user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available lessons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lesson"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Create a new lesson",
                "description": "Create a new lesson.",
                "operationId": "createLesson",
                "requestBody": {
                    "description": "Create lesson",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLesson"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/lessons/{id}": {
            "get": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Get a specific lesson",
                "description": "Returns lesson details",
                "operationId": "getLessonById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lesson id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific lessons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lesson"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Lesson Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Delete lesson",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of lesson to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Lesson not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Update a specific lesson",
                "description": "Update lesson.",
                "operationId": "updateLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lesson id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update lesson",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lesson"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/lessons/{id}/tags": {
            "put": {
                "tags": [
                    "Lesson"
                ],
                "summary": "Update lesson's tags",
                "description": "Update lesson's tags.",
                "operationId": "updateLessonTags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Lesson id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Lesson's tags",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "description": "Lesson's tags",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "action": {
                                        "description": "Update the specified resource in storage.",
                                        "type": "string",
                                        "example": "ATTACH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson tags updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sections": {
            "get": {
                "tags": [
                    "Section"
                ],
                "summary": "Get all sections",
                "description": "Returns all sections details",
                "operationId": "getSections",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Section page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "course"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available sections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Section"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Section"
                ],
                "summary": "Create a new section",
                "description": "Create a new section.",
                "operationId": "createSection",
                "requestBody": {
                    "description": "Create section",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSection"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Section created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sections/{id}": {
            "get": {
                "tags": [
                    "Section"
                ],
                "summary": "Get a specific section",
                "description": "Returns section details",
                "operationId": "getSectionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific sections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Section"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Section Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Section"
                ],
                "summary": "Delete section",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteSection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of sections to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Section not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Section"
                ],
                "summary": "Update a specific section",
                "description": "Update section.",
                "operationId": "updateSection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update section",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Section"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get all tags",
                "description": "Returns all tags details",
                "operationId": "getTags",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Tag page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Create a new tag",
                "description": "Create a new tag.",
                "operationId": "createTag",
                "requestBody": {
                    "description": "Create tag",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTag"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tag created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a specific tag",
                "description": "Returns tag details",
                "operationId": "getTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tag id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Tag Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete tag",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of tag to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update a specific tag",
                "description": "Update tag.",
                "operationId": "updateTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tag id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update tag",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tag updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get all tasks",
                "description": "Returns all tasks details",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Task page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "user;lesson"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task",
                "description": "Create a new task.",
                "operationId": "createTask",
                "requestBody": {
                    "description": "Create task",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get a specific task",
                "description": "Returns task details",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Task Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete task",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Task"
                ],
                "summary": "Update a specific task",
                "description": "Update task.",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update task",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks/{id}/tags": {
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Update task's tags",
                "description": "Update tasks's tags.",
                "operationId": "updateTaskTags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task's tags",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "description": "Task's tags",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "action": {
                                        "description": "Update the specified resource in storage.",
                                        "type": "string",
                                        "example": "ATTACH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task tags updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/videos": {
            "get": {
                "tags": [
                    "Video"
                ],
                "summary": "Get all videos",
                "description": "Returns all videos details",
                "operationId": "getVideos",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Video page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "lesson;user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available videos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Video"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Video"
                ],
                "summary": "Create a new video",
                "description": "Create a new video.",
                "operationId": "createLesson",
                "requestBody": {
                    "description": "Create video",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVideo"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/videos/{id}": {
            "get": {
                "tags": [
                    "Video"
                ],
                "summary": "Get a specific video",
                "description": "Returns video details",
                "operationId": "getVideoById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific videos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Video"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Video Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Video"
                ],
                "summary": "Delete video",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteVideo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of video to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Video not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Video"
                ],
                "summary": "Update a specific video",
                "description": "Update video.",
                "operationId": "updateVideo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update video",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Video"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/videos/{id}/tags": {
            "put": {
                "tags": [
                    "Video"
                ],
                "summary": "Update video's tags",
                "description": "Update video's tags.",
                "operationId": "updateVideoTags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Video id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Video's tags",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "description": "Video's tags",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "action": {
                                        "description": "Update the specified resource in storage.",
                                        "type": "string",
                                        "example": "ATTACH"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video tags updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/data/{userUuid}": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get current application version",
                "description": "Returns application version",
                "operationId": "getAuthUserDataById",
                "parameters": [
                    {
                        "name": "userUuid",
                        "in": "path",
                        "description": "ID of user to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received application version"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get current application version",
                "description": "Returns application version",
                "operationId": "getCourseById",
                "responses": {
                    "200": {
                        "description": "Successfully received application version",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "model_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateComment": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Comment"
                    },
                    {
                        "required": [
                            "name",
                            "type",
                            "model_id"
                        ]
                    }
                ]
            },
            "Course": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCourse": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Course"
                    },
                    {
                        "required": [
                            "name",
                            "slug"
                        ]
                    }
                ]
            },
            "Lesson": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateLesson": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Lesson"
                    },
                    {
                        "required": [
                            "name",
                            "description",
                            "course_id"
                        ]
                    }
                ]
            },
            "Section": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateSection": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Section"
                    },
                    {
                        "required": [
                            "name",
                            "description",
                            "course_id"
                        ]
                    }
                ]
            },
            "System": {
                "properties": {
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "model_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateTag": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Tag"
                    },
                    {
                        "required": [
                            "name",
                            "type",
                            "model_id"
                        ]
                    }
                ]
            },
            "Task": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lesson_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateTask": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Task"
                    },
                    {
                        "required": [
                            "title",
                            "description",
                            "lesson_id"
                        ]
                    }
                ]
            },
            "Video": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "lesson_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateVideo": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Video"
                    },
                    {
                        "required": [
                            "title",
                            "description",
                            "link",
                            "lesson_id"
                        ]
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Oauth2 security",
                "name": "oauth2",
                "in": "header",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "oauth/token",
                        "scopes": {}
                    }
                },
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}